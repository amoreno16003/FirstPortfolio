{"ast":null,"code":"var _jsxFileName = \"/Users/acid/Desktop/GeneralAssembly/unit-3/Labs/portfolio/src/components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = props => {\n  _s();\n  let [zipcode, setZipcode] = useState('');\n  let [results, setResults] = useState('');\n\n  // let [coordinates, setCoordinates] = useState({lat: '', lon:''});\n\n  const handleChange = event => {\n    setZipcode(event.target.value);\n    console.log(\"your zipcode is \" + zipcode);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // How to use API (Documentation): https://openweathermap.org/current\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?zip=${zipcode},US&appid=${process.env.REACT_APP_API_KEY}`).then(response => {\n      console.log('Weather API response', response.data);\n      setResults(response.data);\n    }).catch(error => console.log('ERROR', error));\n  };\n\n  //F = 1.8*(K-273) + 32.\n  function KelvinToFaren(kelvin) {\n    let result = 1.8 * (kelvin - 273) + 32;\n    result = parseFloat(result).toFixed(2);\n    return result;\n  }\n  const displayWeather = () => {\n    if (results) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: results.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature (in Kelvin): \", KelvinToFaren(results.main.temp), \"F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Speed: \", results.wind.speed, \"mph\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", results.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Please enter your zip code for the weather:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleChange,\n          value: zipcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Get my forcast!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), displayWeather()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"vF413iDetWcaRixGdN8QL5kZ6w0=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","axios","Weather","props","zipcode","setZipcode","results","setResults","handleChange","event","target","value","console","log","handleSubmit","preventDefault","get","process","env","REACT_APP_API_KEY","then","response","data","catch","error","KelvinToFaren","kelvin","result","parseFloat","toFixed","displayWeather","name","main","temp","wind","speed","weather","description"],"sources":["/Users/acid/Desktop/GeneralAssembly/unit-3/Labs/portfolio/src/components/Weather.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios'\n\nconst Weather = (props) => {\n\n  let [zipcode, setZipcode] = useState('');\n  let [results, setResults] = useState('');\n  \n  // let [coordinates, setCoordinates] = useState({lat: '', lon:''});\n\n  const handleChange = (event) => {\n    setZipcode(event.target.value);\n    console.log(\"your zipcode is \" + zipcode);\n  }\n\n  const handleSubmit = (event) =>{\n    event.preventDefault();\n    // How to use API (Documentation): https://openweathermap.org/current\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?zip=${zipcode},US&appid=${process.env.REACT_APP_API_KEY}`)\n    .then(response =>{\n      console.log('Weather API response', response.data);\n      setResults(response.data);\n    })\n    .catch(error => console.log('ERROR', error));\n  }\n\n  //F = 1.8*(K-273) + 32.\n  function KelvinToFaren (kelvin) {\n    let result = 1.8*(kelvin-273)+32;\n    result = parseFloat(result).toFixed(2);\n    return result;\n  }\n  const displayWeather = () => {\n    if (results) {\n      return (\n        <div>\n          \n          <h2>{results.name}</h2>\n          <p>Temperature (in Kelvin): {KelvinToFaren(results.main.temp)}F</p>\n          <p>Wind Speed: {results.wind.speed}mph</p>\n          <p>Description: {results.weather[0].description}</p>\n          </div>\n      );\n    }\n    else{\n      return (\n        <div></div>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n          \n        <label>\n          Please enter your zip code for the weather:\n          <input type=\"text\" onChange={handleChange} value={zipcode}/>\n        </label>\n        <input type=\"submit\" value=\"Get my forcast!\"/>\n      </form>\n      {displayWeather()}\n    </div>\n  )\n}\n\nexport default Weather"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EAEzB,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACxC,IAAI,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAExC;;EAEA,MAAMQ,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,UAAU,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGT,OAAO,CAAC;EAC3C,CAAC;EAED,MAAMU,YAAY,GAAIL,KAAK,IAAI;IAC7BA,KAAK,CAACM,cAAc,EAAE;IACtB;IACAd,KAAK,CAACe,GAAG,CAAE,uDAAsDZ,OAAQ,aAAYa,OAAO,CAACC,GAAG,CAACC,iBAAkB,EAAC,CAAC,CACpHC,IAAI,CAACC,QAAQ,IAAG;MACfT,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEQ,QAAQ,CAACC,IAAI,CAAC;MAClDf,UAAU,CAACc,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIZ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEW,KAAK,CAAC,CAAC;EAC9C,CAAC;;EAED;EACA,SAASC,aAAa,CAAEC,MAAM,EAAE;IAC9B,IAAIC,MAAM,GAAG,GAAG,IAAED,MAAM,GAAC,GAAG,CAAC,GAAC,EAAE;IAChCC,MAAM,GAAGC,UAAU,CAACD,MAAM,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;IACtC,OAAOF,MAAM;EACf;EACA,MAAMG,cAAc,GAAG,MAAM;IAC3B,IAAIxB,OAAO,EAAE;MACX,oBACE;QAAA,wBAEE;UAAA,UAAKA,OAAO,CAACyB;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eACvB;UAAA,wCAA6BN,aAAa,CAACnB,OAAO,CAAC0B,IAAI,CAACC,IAAI,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACnE;UAAA,2BAAgB3B,OAAO,CAAC4B,IAAI,CAACC,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC1C;UAAA,4BAAiB7B,OAAO,CAAC8B,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9C;IAEZ,CAAC,MACG;MACF,oBACE;QAAA;QAAA;QAAA;MAAA,QAAW;IAEf;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAEvB,YAAa;MAAA,wBAE3B;QAAA,uEAEE;UAAO,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAEN,YAAa;UAAC,KAAK,EAAEJ;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACtD,eACR;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC,EACN0B,cAAc,EAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAEV,CAAC;AAAA,GA7DK5B,OAAO;AAAA,KAAPA,OAAO;AA+Db,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}